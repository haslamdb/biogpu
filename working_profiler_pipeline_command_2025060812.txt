# alright we're starting with a new profiler workflow at runtime/kernels/profiler
# We now split out CMakeLists.txt into the individual directories so the build locations will be within the kernel subdirectories

# You're in /runtime/kernels/profiler

# 1. Create a build directory
mkdir build
cd build

# 2. Run CMake to configure the project
cmake ..

# 3. Build everything
make -j4  # The -j4 uses 4 CPU cores for faster compilation

# Or build specific targets:
make test_minimizer         # Just the minimizer test
make test_fastq_pipeline    # Just the FASTQ pipeline
make hybrid_profiler_pipeline  # Just the hybrid profiler

# Test with synthetic data (1000 sequences)
./test_minimizer

# Test with your own FASTQ file
./test_minimizer /path/to/your/reads.fastq

# Run benchmark mode (10,000 sequences)
./test_minimizer --benchmark

# Process a FASTQ file (can be gzipped)
./test_fastq_pipeline ../../../../1M_synthetic_reads_R1.fastq.gz

# Or uncompressed (though compressed reads run fine - except got stalled)
zcat ../../../../1M_synthetic_reads_R1.fastq.gz > test_reads.fastq
./test_fastq_pipeline test_reads.fastq

# This needs a Kraken2 database
./hybrid_profiler_pipeline /path/to/kraken2_db /path/to/reads.fastq

./hybrid_profiler_pipeline /home/david/Databases/Kraken2DB data/569_A_038_R1.fastq.gz 


# get genomes from NCBI and process kmers (default 31 with stride 5)
python src/python/download_microbial_genomes.py data/pathogen_db --email dbhaslam@gmail.com --genomes-per-species 10 --k 31 --stride 5

# next convert the db to binary
cd runtime/kernels/profiler/build
./runtime/kernels/profiler/build/build_db_from_kmers data/pathogen_db/database_kmers.txt data/pathogen_db/pathogen.db

Database statistics:
  Total k-mers: 143516534
  Maximum taxon ID: 28901

Building GPU hash table...
Building GPU hash table with 268435456 buckets for 81680910 k-mers
Hash table built with 11262301 collisions (13.7882%)
Database uploaded to GPU (32768 MB)
Saving database to data/pathogen_db/pathogen.db...
Saved database to data/pathogen_db/pathogen.db

Database creation complete!
You can now use this database with:
  ./gpu_profiler_pipeline data/pathogen_db/pathogen.db <reads.fastq>

# Run profiler:
./runtime/kernels/profiler/build/gpu_profiler_pipeline data/pathogen_profiler_db/ data/569_A_038_R1.fastq.gz \
    data/569_A_038_R2.fastq.gz --output-prefix data/569_A_038_profile



● Bash(cd ~/Documents/Code/biogpu/runtime/kernels/profiler/build && ./build_db_from_kmers
      ~/Documents/Code/biogpu/data/pathogen_db/database_kmers.txt ~/Documents/Code/…)
  ⎿  Building GPU k-mer database from /home/david/Documents/Code/biogpu/data/pathogen_db/database_kmers.txt...
       Processed 100000 k-mers...
       Processed 200000 k-mers...
       Processed 300000 k-mers...
     … +741 lines (ctrl+r to expand)

● Success! The database has been built. It processed 72,631,855 k-mers from 28,901 different taxa and created a GPU hash table with
   134,217,728 buckets. The database is now saved at /home/david/Documents/Code/biogpu/data/pathogen_db/pathogen.db and uses 16GB
  of memory.

  You can now use this database with the gpu_profiler_pipeline command as shown in the output.

  ● The GPU profiler encountered a CUDA error. This could be due to several reasons. Let me check a few things:

● Bash(nvidia-smi)
  ⎿  Thu Jun 12 08:45:15 2025
     +-----------------------------------------------------------------------------------------+
     | NVIDIA-SMI 570.133.07             Driver Version: 570.133.07     CUDA Version: 12.8     |
     |-----------------------------------------+------------------------+----------------------+
     … +24 lines (ctrl+r to expand)

● I see there's already a test_fastq_pipeline process using both GPUs. The database requires 16GB but each TITAN Xp only has 12GB.
  Let me check if we need to specify a GPU or if there's a smaller database option:

● Bash(cd ~/Documents/Code/biogpu && ./runtime/kernels/profiler/build/gpu_profiler_pipeline --help 2>&1 | head -50)
  ⎿ Usage: ./runtime/kernels/profiler/build/gpu_profiler_pipeline <database.bin> <reads.fastq> [reads2.fastq] [--output-prefix
    PREFIX]
      Single-end mode: provide one FASTQ file
      Paired-end mode: provide two FASTQ files (R1 and R2)
      --output-prefix: Prefix for output files (default: microbiome_profile)

● The issue is that the database (16GB) is larger than the GPU memory (12GB per card). Let me check if there's a smaller test
  database or if we need to create one:

  #  Here are the exact commands I used:

  1. Created the taxon mapping file:
  python src/python/create_taxon_mapping.py data/pathogen_profiler_db/

  2. Created a subset database for testing:
  # First created a subset of k-mers (1M instead of 143M)
  head -n 1000000 data/pathogen_profiler_db/database_kmers.txt > data/pathogen_profiler_db/database_kmers_subset.txt

  # Then built the binary database from the subset
  ./runtime/kernels/profiler/build/build_db_from_kmers \
      data/pathogen_profiler_db/database_kmers_subset.txt \
      data/pathogen_profiler_db/pathogen_subset.db

  3. Ran the profiler with the subset database:
  ./runtime/kernels/profiler/build/gpu_profiler_pipeline \
      data/pathogen_profiler_db/pathogen_subset.db \
      data/569_A_038_R1.fastq.gz \
      data/569_A_038_R2.fastq.gz \
      --output-prefix data/569_A_038_profile_subset

  The key difference from your original command is that I'm using the subset database (pathogen_subset.db) instead of the
  full database, since the full 33GB database doesn't fit in your 12GB GPU memory.

./runtime/kernels/profiler/build/hierarchical_profiler_pipeline \
  data/pathogen_hierarchical.db \
  data/569_A_038_R1.fastq.gz \
  data/569_A_038_R2.fastq.gz \
  --memory 10 \
  --output-prefix results/569_A_038_hierarchical


cd runtime/kernels/profiler && ./build_hierarchical_db \
../../../data/pathogen_profiler_db/database_kmers.txt \
 ../../../data/pathogen_hierarchical.db \
 --tier-size 512   

K-mer reading complete:
  Total k-mers: 143516534
  Unique k-mers: 81680910
  Maximum taxon ID: 28901

Creating database tiers...
Sorting k-mers by frequency...
Creating 3 tiers...
Tier creation complete:
  Tier 0: 33554432 k-mers, 512 MB
  Tier 1: 33554432 k-mers, 512 MB
  Tier 2: 14572046 k-mers, 222.352 MB

Writing tier files...
  Wrote ../../../data/pathogen_hierarchical.db/tier_0.bin (512 MB)
  Wrote ../../../data/pathogen_hierarchical.db/tier_1.bin (512 MB)
  Wrote ../../../data/pathogen_hierarchical.db/tier_2.bin (222.352 MB)


./runtime/kernels/profiler/hierarchical_profiler_pipeline \ 
  data/pathogen_hierarchical.db \  
  data/569_A_038_R1.fastq.gz \ 
  data/569_A_038_R2.fastq.gz \ 
  --memory 10 \ 
  --output-prefix results/569_A_038_hierarchical  

# ok we're going to put the hierarchical_profiler_pipeline in archive and move to hybrid hybrid_gpu_cpu_profiler
./runtime/kernels/profiler/hierarchical_profiler_pipeline \
  data/pathogen_hierarchical_canonical \
  data/569_A_038_R1.fastq.gz \
  data/569_A_038_R2.fastq.gz \
  --memory 10 \
  --output-prefix results/569_A_038_hierarchical_fixed 



# hybrid_gpu_cpu_profiler 
./runtime/kernels/profiler/hybrid_gpu_cpu_profiler runtime/kernels/profiler/test_hybrid.db data/569_A_038_R1.fastq.gz hybrid_test_output

  ./hybrid_gpu_cpu_profiler test_hybrid_fixed.db ../../../data/569_A_038_R1.fastq.gz hybrid_test_output